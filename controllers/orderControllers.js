const CustomerOrders = require("../models/customerOrders");
const DesignerOrders = require("../models/designerOrders");
const Users = require("../models/users");
const Products = require("../models/products");

exports.placeOrder = async (req, res) => {
  let { orderedProducts } = req.body;
  //Here we will create the order of the customer
  await CustomerOrders.create({
    products: orderedProducts,
    customerId: req.user.id,
    total: orderedProducts.total
  })
    .then(order => {
      console.log("Customer Order Completed");

      //Here orders are created to individual designer for each product of their product
      orderedProducts.map(orderProduct => {
        // console.log(orderProduct);
        Products.findById(orderProduct.productId)
          .lean()
          .then(product => {
            DesignerOrders.create({
              product: product._id,
              price: product.price,
              color: orderProduct.color,
              size: orderProduct.size,
              discount: product.discount,
              status: "Active",
              customer: req.user.id,
              designer: product.userId,
              customerOrderId: order._id
            })
              .then(order => console.log("Designer Order Completed"))
              .catch(err => res.status(400).json({ err: err, success: false }));
          })
          .catch(err => res.status(400).json({ err: err, success: false }));
      });
    })
    .catch(err => res.status(400).json({ err: err, success: false }));

  //Here we will create the order of the customer
  CustomerOrders.create({ products: orderedProducts, customerId: req.user.id })
    .then(order => console.log("Customer Order Completed"))
    .catch(err => res.status(400).json({ err: err, success: false }));

  Users.findByIdAndUpdate(req.user.id, { cart: [] })
    .lean()
    .then(user =>
      res.status(200).json({ msg: "Order Placed Successfully", success: true })
    )
    .catch(err => res.status(400).json({ err: err, success: false }));
};

exports.fetchCustomerOrders = (req, res) => {
  CustomerOrders.find({ customerId: req.user.id })
    .select("products")
    .lean()
    .then(orders => res.status(200).json({ orders: orders, success: true }))
    .catch(err => res.status(400).json({ err: err, success: false }));
};

exports.fetchDesignerOrders = (req, res) => {
  DesignerOrders.find({ designer: req.user.id })
    .lean()
    .sort({ status: "asc" })
    .then(orders => res.status(200).json({ orders: orders, success: true }))
    .catch(err => res.status(400).json({ err: err, success: false }));
};

/**
 * Required Parameters (orderId, productId)
 * orderId = CustomerOrders._id
 * productId = CustomerOrders.products._id (It is the autogenerated key for every product in the array of the products)
 */
exports.cancelOrderProductByCustomer = (req, res) => {
  CustomerOrders.findOne({
    customerId: req.user.id,
    _id: req.body.orderId
  })
    .select("products")
    .then(order => {
      console.log(order.products)
    })
    .catch(err => console.log(err));
};
